# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/abilitymgr"

#subscriber_extension_path = "${ability_runtime_path}/frameworks/native/ability/native"

config("coverage_flags") {
  if (ability_runtime_feature_coverage) {
    cflags = [ "--coverage" ]
    ldflags = [ "--coverage" ]
  }
}

ohos_unittest("static_subscriber_extension_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_native_path}/appkit/ability_runtime",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_services_path}/common/include",
  ]

  sources = [
    "${ability_runtime_native_path}/ability/native/js_static_subscriber_extension.cpp",
    "${ability_runtime_native_path}/ability/native/js_static_subscriber_extension_context.cpp",
    "${ability_runtime_native_path}/ability/native/static_subscriber_extension.cpp",
    "${ability_runtime_native_path}/ability/native/static_subscriber_stub_imp.cpp",
    "${ability_runtime_native_path}/appkit/ability_runtime/static_subscriber_extension_context.cpp",

    #"${subscriber_extension_path}/static_subscriber_extension.cpp",
    #"remote_register_service_proxy_test.cpp",
    "static_subscriber_extension_test.cpp",
  ]

  configs = [ ":coverage_flags" ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_path}/frameworks/native/ability/native:abilitykit_native",
    "${ability_runtime_path}/frameworks/native/ability/native:static_subscriber_ipc",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_context_native",
    "ability_runtime:runtime",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":static_subscriber_extension_test" ]
}
