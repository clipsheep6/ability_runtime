# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/abilitymgr"

ohos_unittest("ability_manager_service_anr_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ace_engine_path}/interfaces/inner_api/ui_service_manager/include",
    "${ability_runtime_test_path}/mock/services_abilitymgr_test/libs/arkui_mock/include",
    "${ace_engine_path}/adapter/ohos/services/uiservice/include",
    "${ace_engine_path}/frameworks",
    "${ability_runtime_test_path}/mock/services_abilitymgr_test/libs/appexecfwk_core/include",
  ]

  sources = [
    "${ability_runtime_test_path}/mock/services_abilitymgr_test/libs/arkui_mock/src/ui_service_mgr_client_mock.cpp",
    "ability_manager_service_anr_test.cpp",
  ]

  configs = [ "${ability_runtime_services_path}/abilitymgr:abilityms_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_services_path}/abilitymgr:abilityms",
    "${ability_runtime_services_path}/common:perm_verification",
    "${ability_runtime_test_path}/mock/services_abilitymgr_test/libs/aakit:aakit_mock",
    "${ability_runtime_test_path}/mock/services_abilitymgr_test/libs/appexecfwk_core:appexecfwk_appmgr_mock",
    "${ability_runtime_test_path}/mock/services_abilitymgr_test/libs/appexecfwk_core:appexecfwk_bundlemgr_mock",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
    "//third_party/icu/icu4c:shared_icuuc",
  ]

  external_deps = [
    "ability_base:session_info",
    "ability_base:want",
    "ability_base:zuri",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "ffrt:libffrt",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
    "window_manager:scene_session",
  ]

  if (ecologic_rule_enabled) {
    external_deps += [ "ecological_rule_manager:erms_client" ]
  }

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

group("unittest") {
  testonly = true

  deps = [ ":ability_manager_service_anr_test" ]
}
