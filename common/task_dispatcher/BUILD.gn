# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/aafwk/standard/aafwk.gni")

config("task_dispatcher_public_config") {
  include_dirs = [
    "include/dispatcher",
    "include/task",
    "include/threading",
    "${aafwk_path}/services/common/include",
    "${appexecfwk_path}/common/log/include",
    "${appexecfwk_path}/interfaces/innerkits/libeventhandler/include",
    "${aafwk_path}/frameworks/kits/appkit/native/app/include/task",
    "${aafwk_path}/frameworks/kits/appkit/native/app/include",
  ]
}

ohos_shared_library("task_dispatcher") {
  public_configs = [ ":task_dispatcher_public_config" ]

  sources = [
    "src/dispatcher/base_task_dispatcher.cpp",
    "src/dispatcher/global_task_dispatcher.cpp",
    "src/dispatcher/group_impl.cpp",
    "src/dispatcher/parallel_task_dispatcher.cpp",
    "src/dispatcher/parallel_task_dispatcher_base.cpp",
    "src/dispatcher/serial_task_dispatcher.cpp",
    "src/dispatcher/spec_task_dispatcher.cpp",
    "src/dispatcher/task_dispatcher_context.cpp",
    "src/task/barrier_handler.cpp",
    "src/task/sync_task.cpp",
    "src/task/task.cpp",
    "src/threading/default_thread_factory.cpp",
    "src/threading/default_worker_pool_config.cpp",
    "src/threading/task_executor.cpp",
    "src/threading/work_thread.cpp",
    "src/threading/worker_pool.cpp",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [ "${appexecfwk_path}/common:libappexecfwk_common" ]
  external_deps = [
    "bundle_framework:appexecfwk_base",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
  ]

  subsystem_name = "aafwk"
  part_name = "ability_runtime"
}
