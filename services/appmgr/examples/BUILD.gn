# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

ohos_executable("appspawnclienttest") {
  sources = [ "app_spawn_client_test/main.cpp" ]

  configs = [ ":test_config" ]

  deps = [ "//foundation/aafwk/standard/services/appmgr:libams" ]
  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "appspawn:appspawn_socket_client",
    "bundle_framework:appexecfwk_base",
    "eventhandler:libeventhandler",
  ]

  subsystem_name = "aafwk"
  part_name = "ability_runtime"
}

ohos_executable("appmgrserviceregtest") {
  sources = [ "app_mgr_service_register_test/main_client.cpp" ]

  configs = [ ":test_config" ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    "//foundation/aafwk/standard/services/appmgr:libams",
    #"startup:appspawn_jni",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    "utils_base:utils",
  ]

  subsystem_name = "aafwk"
  part_name = "ability_runtime"
}

config("test_config") {
  # header file path
  include_dirs = [
    "//foundation/aafwk/standard/services/appmgr/include",
    "//foundation/appexecfwk/standard/services/common/include",
  ]

  # enable exception

  configs = [ "//foundation/aafwk/standard/services/appmgr:appmgr_config" ]
}
