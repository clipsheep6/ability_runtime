# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/aafwk/standard/aafwk.gni")
import("//foundation/aafwk/standard/feature.gni")
import("//foundation/aafwk/standard/services/abilitymgr/abilitymgr.gni")
EVENT_DIR = "//base/notification/ces_standard/"

group("abilityms_target") {
  deps = [
    ":abilityms",
    ":ams_service_config",
    "examples:free_install_test",
  ]
}

group("unittest") {
  testonly = true

  deps = [ "test:unittest" ]
}

config("abilityms_config") {
  include_dirs = [
    "include/",
    "${EVENT_DIR}/frameworks/core/include",
    "${EVENT_DIR}/interfaces/innerkits/native/include",
    "${innerkits_path}/ability_manager/include",
    "${innerkits_path}/app_manager/include",
    "${innerkits_path}/base/include",
    "${innerkits_path}/uri/include",
    "${innerkits_path}/want/include",
    "${innerkits_path}/want/include/ohos/aafwk/content",
    "${innerkits_path}/intent/include/ohos/aafwk/content",
    "${innerkits_path}/want/include/ohos/aafwk/content",
    "${services_path}/common/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//prebuilts/jdk/jdk8/linux-x86/include",
    "//prebuilts/jdk/jdk8/linux-x86/include/linux",
    "//third_party/json/include",
    "${kits_path}/ability/native/include",
    "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_rdb/include",
    "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_appdatafwk/include",
    "//foundation/distributeddatamgr/appdatamgr/interfaces/innerkits/native_dataability/include",
    "${innerkits_path}/dataobs_manager/include",
    "${aafwk_path}/tools/aa/include",
    "//base/hiviewdfx/hiview/adapter/utility/include",
    "//base/account/os_account/frameworks/common/account_error/include",
    "//base/account/os_account/frameworks/common/database/include",
    "//base/account/os_account/frameworks/common/log/include",
    "//base/account/os_account/interfaces/innerkits/osaccount/native/include",
    "//base/hiviewdfx/hicollie/interfaces/native/innerkits/include",
    "//base/startup/syspara_lite/interfaces/innerkits/native/syspara/include",
  ]

  if (ability_runtime_graphics) {
    include_dirs += [
      "//foundation/graphic/standard/interfaces/innerkits",
      "//foundation/multimedia/image_standard/interfaces/innerkits/include",
      "//foundation/graphic/standard/interfaces/innerkits/wmservice",
      "//base/global/i18n_standard/frameworks/intl/include",
    ]

    defines = [ "SUPPORT_GRAPHICS" ]
  }

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
}

ohos_shared_library("abilityms") {
  sources = abilityms_files
  sources += [ "src/sa_mgr_client.cpp" ]

  configs = [ ":abilityms_config" ]
  deps = [
    "${innerkits_path}/uri_permission:uri_permission_mgr",
    "${kits_path}/ability/native:dummy_classes",
    "${services_path}/common:perm_verification",
    "//base/hiviewdfx/hiview/adapter/utility:hiview_adapter_utility",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "bytrace_standard:bytrace_core",
    "ces_standard:cesfwk_core",
    "ces_standard:cesfwk_innerkits",
    "device_manager_base:devicemanagersdk",
    "dsoftbus_standard:softbus_client",
    "eventhandler:libeventhandler",
    "hicollie_native:libhicollie",
    "hisysevent_native:libhisysevent",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "native_appdatamgr:native_dataability",
    "native_appdatamgr:native_rdb",
    "os_account_standard:os_account_innerkits",
    "os_account_standard:os_account_innerkits",
    "resmgr_standard:global_resmgr",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    "startup_l2:syspara",
    "utils_base:utils",
  ]

  if (ability_runtime_graphics) {
    deps += [
      "//base/global/i18n_standard/frameworks/intl:intl_util",
      "//foundation/ace/ace_engine/interfaces/innerkits/ui_service_manager:ui_service_mgr",
      "//foundation/multimedia/image_standard/interfaces/innerkits:image_native",
      "//third_party/libpng:libpng",
    ]
    public_deps = [ "//foundation/graphic/standard:libwmservice" ]
  }

  subsystem_name = "aafwk"
  part_name = "ability_runtime"
}

ohos_prebuilt_etc("ams_service_config.json") {
  source = "resource/ams_service_config.json"
  subsystem_name = "aafwk"
  part_name = "ability_runtime"
}

group("ams_service_config") {
  deps = [ ":ams_service_config.json" ]
}
