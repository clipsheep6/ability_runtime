# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/aafwk/standard/aafwk.gni")
import("//foundation/aafwk/standard/feature.gni")

ohos_shared_library("missionmanager_napi") {
  include_dirs = []

  sources = [
    "js_mission_info_utils.cpp",
    "js_mission_listener.cpp",
    "mission_manager.cpp",
    "native_module.cpp",
  ]

  configs = [ "${services_path}/common:common_config" ]

  include_dirs = [ "${kits_path}/ability/native/include/continuation/kits" ]

  deps = [
    "${aafwk_path}/interfaces/kits/napi/aafwk/inner/napi_common:napi_common",
    "${services_path}/abilitymgr:abilityms",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "ipc_js:rpc",
    "resmgr_standard:global_resmgr",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    "utils_base:utils",
  ]

  if (ability_runtime_graphics) {
    include_dirs += [
      "//foundation/multimedia/image_standard/interfaces/innerkits/include",
      "//third_party/icu/icu4c/source/common",
    ]
    external_deps += [ "multimedia_image_standard:image" ]
  }

  relative_install_dir = "module/application"

  subsystem_name = "aafwk"
  part_name = "ability_runtime"
}

ohos_shared_library("distributedmissionmanager") {
  include_dirs = [
    "//third_party/libuv/include",
    "//third_party/node/src",
  ]

  configs = [ "${services_path}/common:common_config" ]

  cflags = [
    "-fPIC",
    "-g3",
  ]

  sources = [
    "distributed_mission_manager.cpp",
    "mission_continue_stub.cpp",
  ]

  deps = [
    "${aafwk_path}/interfaces/kits/napi/aafwk/inner/napi_common:napi_common",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "hiviewdfx_hilog_native:libhilog",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "ipc_js:rpc",
    "napi:ace_napi",
    "startup_l2:syspara",
    "utils_base:utils",
  ]

  relative_install_dir = "module"

  subsystem_name = "aafwk"
  part_name = "ability_runtime"
}
