# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/aafwk/standard/aafwk.gni")

config("appkit_config") {
  defines = [
    "AMS_LOG_TAG = \"AppkitNative\"",
    "AMS_LOG_DOMAIN = 0xD001150",
  ]

  include_dirs = [
    "${aafwk_path}/frameworks/kits/ability/native/include",
    "//third_party/json/include",
  ]
}

config("appkit_public_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//base/global/resmgr_standard/interfaces/innerkits/include",
    "//base/global/i18n_standard/frameworks/intl/include",
    "//third_party/icu/icu4c/source/common",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/include",
  ]
}

#build bin
ohos_executable("appexec") {
  include_dirs = [
    "${aafwk_path}/services/common/include",
    "${appexecfwk_path}/common/log/include",
    "${aafwk_path}/interfaces/innerkits/app_manager/include/appmgr",
    "${aafwk_path}/frameworks/kits/ability/native/include",
    "${aafwk_path}/interfaces/innerkits/base/include",
    "${aafwk_path}/interfaces/innerkits/ability_manager/include",
    "${aafwk_path}/interfaces/innerkits/uri/include",
    "${aafwk_path}/services/abilitymgr/include",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/app",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/context",
    "${aafwk_path}/frameworks/kits/appkit/native/app/include",
  ]

  configs = [ ":appkit_config" ]

  sources = [ "${aafwk_path}/frameworks/kits/appkit/native/app/src/main.cpp" ]

  deps = [
    "${aafwk_path}/frameworks/kits/ability/native:abilitykit_native",
    "${aafwk_path}/frameworks/kits/appkit:appkit_native",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr_standard:samgr_proxy",
    "utils_base:utils",
  ]

  install_enable = true
  part_name = "ability_runtime"
}

# build so
ohos_shared_library("appkit_native") {
  include_dirs = [
    "${aafwk_path}/services/common/include",
    "${appexecfwk_path}/common/log/include",
    "${aafwk_path}/interfaces/innerkits/app_manager/include/appmgr",
    "${aafwk_path}/interfaces/innerkits/uri/include",
    "${aafwk_path}/frameworks/kits/appkit/native/app/include",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/app",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/context",
    "${aafwk_path}/frameworks/kits/appkit/native",
    "${aafwk_path}/frameworks/kits/ability/native/include",
    "${aafwk_path}/interfaces/innerkits/ability_manager/include",
    "${aafwk_path}/services/abilitymgr/include",

    "${aafwk_path}/common/task_dispatcher/include/dispatcher",
    "${aafwk_path}/common/task_dispatcher/include/task",
    "${aafwk_path}/common/task_dispatcher/include/threading",
    "${aafwk_path}/frameworks/kits/appkit/native/app/include/task",
    "//foundation/aafwk/standard/interfaces/kits/napi/aafwk/inner/napi_common",
  ]

  configs = [ ":appkit_config" ]

  public_configs = [ ":appkit_public_config" ]

  sources = [
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/app/ability_stage.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/app/js_ability_stage.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/app/js_ability_stage_context.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/ability_manager.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/ability_record_mgr.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/app_loader.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/application_context.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/application_env.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/application_env_impl.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/application_impl.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/context_container.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/context_deal.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/hdc_register.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/main_thread.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/ohos_application.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/sys_mgr_client.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/watchdog.cpp",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    ":appkit_delegator",
    "${aafwk_path}/common/task_dispatcher:task_dispatcher",
    "${aafwk_path}/frameworks/kits/appkit:app_context",
    "${appexecfwk_path}/common:libappexecfwk_common",
    "${innerkits_path}/uri_permission:uri_permission_mgr",
    "//third_party/icu/icu4c:shared_icuuc",
  ]

  public_deps = [
    "//base/global/i18n_standard/frameworks/intl:intl_util",
    "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr",
  ]
  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_manager",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "bytrace_standard:bytrace_core",
    "eventhandler:libeventhandler",
    "faultloggerd:lib_dfx_dump_catcher",
    "faultloggerd:libfaultloggerd",
    "hisysevent_native:libhisysevent",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimodalinput_base:libmmi-client",
    "napi:ace_napi",
    "samgr_standard:samgr_proxy",
    "utils_base:utils",
  ]

  part_name = "ability_runtime"
}

# build so
ohos_shared_library("app_context") {
  include_dirs = [
    "${aafwk_path}/frameworks/kits/appkit/native/app/include",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/context",
  ]

  configs = [ ":appkit_config" ]

  public_configs = [ ":appkit_public_config" ]

  sources = [
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/context/context_impl.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/context/js_context_utils.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/context/js_hap_module_info_utils.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/context/js_resource_manager_utils.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/app/src/sys_mgr_client.cpp",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    "${appexecfwk_path}/common:libappexecfwk_common",

    # "${aafwk_path}/frameworks/kits/ability/native:abilitykit_native",
    "${aafwk_path}/common/task_dispatcher:task_dispatcher",
    "//base/hiviewdfx/hiview/adapter/utility:hiview_adapter_utility",
    "//third_party/icu/icu4c:shared_icuuc",
  ]

  public_deps = [
    "//base/account/os_account/frameworks/osaccount/native:os_account_innerkits",
    "//base/global/i18n_standard/frameworks/intl:intl_util",
    "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:app_manager",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimodalinput_base:libmmi-client",
    "napi:ace_napi",
    "os_account_standard:os_account_innerkits",
    "resmgr_standard:resmgr_napi_core",
    "samgr_standard:samgr_proxy",
    "utils_base:utils",
  ]

  part_name = "ability_runtime"
}

# build so
ohos_shared_library("appkit_delegator") {
  include_dirs = [
    "${aafwk_path}/services/common/include",
    "${appexecfwk_path}/common/log/include",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/app",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_runtime/context",
    "${aafwk_path}/frameworks/kits/appkit/native",
    "${aafwk_path}/frameworks/kits/ability/native/include",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/include",
    "${aafwk_path}/interfaces/innerkits/ability_manager/include",
  ]

  configs = [ ":appkit_config" ]

  public_configs = [ ":appkit_public_config" ]

  sources = [
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/src/ability_delegator.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/src/ability_delegator_args.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/src/ability_delegator_registry.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/src/delegator_thread.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/src/iability_monitor.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/src/runner_runtime/js_test_runner.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/src/shell_cmd_result.cpp",
    "${aafwk_path}/frameworks/kits/appkit/native/ability_delegator/src/test_runner.cpp",
    "${aafwk_path}/tools/aa/src/shell_command_result.cpp",
    "${aafwk_path}/tools/aa/src/test_observer_proxy.cpp",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${aafwk_path}/frameworks/kits/appkit:app_context",
    "${appexecfwk_path}/common:libappexecfwk_common",
    "//third_party/icu/icu4c:shared_icuuc",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:app_manager",
    "ability_runtime:app_manager",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "bytrace_standard:bytrace_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr_standard:samgr_proxy",
    "utils_base:utils",
  ]

  public_deps = [ "//foundation/ace/napi:ace_napi" ]

  part_name = "ability_runtime"
}
